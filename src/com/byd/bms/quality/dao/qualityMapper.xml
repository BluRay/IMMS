<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.quality.dao.IQualityDao">

	<select id="getOrderConfigList" parameterType="Map" resultType="Map">
		select o.id,c.id config_id,o.order_no,CONCAT(o.order_no,' ',o.order_name,t.bus_type_code,'  ',o.order_qty,'台') AS order_desc,
		o.memo,t.internal_name bus_type,c.order_config_name,u.username editor,c.edit_date,o.bus_type_id
		from BMS_OR_ORDER_CONFIG c 
		left join BMS_OR_ORDER o on o.id=c.order_id
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id 
		left join BMS_BASE_USER u on u.id=c.editor_id
		where 1=1
		<if test="order_id !=null and order_id !=''">
			and o.id=#{order_id}
		</if>
		<if test="bus_type_id !=null and bus_type_id !=''">
			and o.bus_type_id=#{bus_type_id}
		</if>
		<if test="order_config_id !=null and order_config_id !='' ">
			and c.id=#{order_config_id}
		</if>
			order by o.order_no desc
		<if test="start !=null">
			limit #{start},#{length}
		</if>
		
	</select>
	
	<select id="getConfigTotalCount" parameterType="Map" resultType="int">
		select count(c.id)
		from BMS_OR_ORDER_CONFIG c 
		left join BMS_OR_ORDER o on o.id=c.order_id
		where 1=1
		<if test="order_id !=null and order_id !=''">
			and o.id=#{order_id}
		</if>
		<if test="bus_type_id !=null and bus_type_id !=''">
			and o.bus_type_id=#{bus_type_id}
		</if>
		<if test="order_config_id !=null and order_config_id !='' ">
			and c.id=#{order_config_id}
		</if>
	</select>
	
	<select id="queryKeyPartsHeader" parameterType="Map" resultType="Map">
		select id,bus_type_id,order_id,order_config_id from BMS_QM_KEY_PARTS_TEMPLATE_HEADER 
		where bus_type_id=#{bus_type_id} and order_id=#{order_id} and order_config_id=#{order_config_id}
	</select>
	
	<insert id="saveKeyPartsHeader" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_QM_KEY_PARTS_TEMPLATE_HEADER (bus_type_id,order_id,order_config_id,editor_id,edit_date)
		values (#{bus_type_id},#{order_id},#{order_config_id},#{editor_id},#{edit_date})
	</insert>
	
	<update id='updateKeyPartsHeader' parameterType="Map">
		update BMS_QM_KEY_PARTS_TEMPLATE_HEADER set editor_id=#{editor_id} ,edit_date=#{edit_date}
		where bus_type_id=#{bus_type_id} and order_id=#{order_id} and order_config_id=#{order_config_id}
	</update>
	
	<insert id="saveKeyPartsDetails" parameterType="Map" useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_QM_KEY_PARTS_TEMPLATE_DETAILS 
		(key_components_template_id,sap_mat,parts_no,parts_name,size,vendor,workshop,process,3C_components)
		values
		<foreach collection="detail_list" item="detail" index="index" separator=",">
			(#{header_id},#{detail.sap_mat},#{detail.parts_no},#{detail.parts_name},#{detail.size},#{detail.vendor},#{detail.workshop},#{detail.process},#{detail.ccc})
		</foreach>		
	</insert>
	
	<delete id="deleteKeyPartsByHeader" parameterType="int">
		delete from BMS_QM_KEY_PARTS_TEMPLATE_DETAILS where key_components_template_id=#{header_id}
	</delete>
	
	<select id="queryKeyPartsList" parameterType="Map" resultType="Map">
		select d.sap_mat,d.parts_no,d.parts_name,d.size,d.vendor,d.workshop,d.process,d.3C_components ccc
		from BMS_QM_KEY_PARTS_TEMPLATE_DETAILS d
		left join BMS_QM_KEY_PARTS_TEMPLATE_HEADER h on d.key_components_template_id=h.id
		where h.bus_type_id=#{bus_type_id} and h.order_id=#{order_id} and h.order_config_id=#{order_config_id}
	</select>
	
	<!-- 品质标准更新记录 start add by tangjin -->
	
	<resultMap type="com.byd.bms.quality.model.BmsBaseQCStdRecord" id="stdRecordMap">
		<id property="id" column="id" />
		<result property="recordNo" column="record_num" />
		<result property="usynopsis" column="usynopsis" />
		<result property="standardfile" column="standardfile" />
		<result property="bfilePath" column="bfile_path" />
		<result property="afilePath" column="afile_path" />
		<result property="memo" column="memo" />
		<result property="editorId" column="creator_id" />
		<result property="editDate" column="creat_date" />
		<result property="editor" column="editor" />
	</resultMap>
	<insert id="insertStdRecord" parameterType="com.byd.bms.setting.model.BmsBaseQCStdRecord"
		useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_QM_QUALITY_STANDARDS_CHANGE_LOGS 
		(record_num,usynopsis,standardfile,bfile_path,afile_path,memo,creator_id,creat_date)
		values(
		#{recordNo},#{usynopsis},#{standardfile},#{bfilePath},#{afilePath},#{memo},#{editorId},#{editDate}
		)
	</insert>
	<select id="selectStdRecord" parameterType="int" resultMap="stdRecordMap">
		select * from BMS_QM_QUALITY_STANDARDS_CHANGE_LOGS where
		id=#{recordId}
	</select>
	<select id="getStdRecordList" parameterType="Map" resultMap="stdRecordMap">
		select t.*,u.username editor from BMS_QM_QUALITY_STANDARDS_CHANGE_LOGS
		t
		left join BMS_BASE_USER u on t.creator_id=u.id where 1=1
		<if test="recordNo!=null and recordNo!=0">
			and t.record_num=#{recordNo}
		</if>
		<if test="stdFileName!=null and  stdFileName!=''">
			and t.standardfile=#{stdFileName}
		</if>
		<if test="updateStart!=null and  updateStart!=''">
			<![CDATA[and t.creat_date>=#{updateStart}]]>
		</if>
		<if test="updateEnd!=null and  updateEnd!=''">
			<![CDATA[and t.creat_date < #{updateEnd}]]>
		</if>
		order by t.creat_date desc
		<if test="offset!=null">
			LIMIT #{offset} ,#{pageSize}
		</if>
	</select>
	<select id="getStdRecordCount" parameterType="Map" resultType="int">
		select count(t.id) from BMS_QM_QUALITY_STANDARDS_CHANGE_LOGS t left
		join BMS_BASE_USER u on t.creator_id=u.id where 1=1
		<if test="recordNo!=null and recordNo!=0">
			and record_num=#{recordNo}
		</if>
		<if test="stdFileName!=null and  stdFileName!=''">
			and standardfile=#{stdFileName}
		</if>
		<if test="updateStart!=null and  updateStart!=''">
			<![CDATA[and t.creat_date>=#{updateStart}]]>
		</if>
		<if test="updateEnd!=null and  updateEnd!=''">
			<![CDATA[and t.creat_date < #{updateEnd}]]>
		</if>
     </select>
</mapper>
