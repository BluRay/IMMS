<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.plan.dao.IPlanDao">

	<select id="checkImportPlanFactory" parameterType="Map" resultType="String">
		SELECT id FROM BMS_FACTORY_ORDER WHERE order_id = (SELECT
		id FROM BMS_OR_ORDER WHERE order_no=#{order_no})
		AND factory_id = (SELECT
		id FROM BMS_BASE_FACTORY WHERE factory_name = #{factory_name})
		limit 1
	</select>
	
	<insert id="insertPlanMaster" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanMasterPlan">
		INSERT INTO BMS_PLAN_MASTER_PLAN
		(version, order_id, factory_id, plan_code_id, plan_month, flag, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, D16, D17, D18, D19, D20, D21, D22, D23, D24, D25, D26, D27, D28, D29, D30, D31, creator_id, create_date)
		VALUES(#{version}, (SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no}), (SELECT id FROM BMS_BASE_FACTORY WHERE factory_name = #{factory_name}),
		(SELECT id FROM BMS_BASE_KEY WHERE key_code = 'PLAN_CODE' AND key_name = #{plan_code_keyname}),
		#{plan_month}, #{flag}, #{D1}, #{D2}, #{D3}, #{D4}, #{D5}, #{D6}, #{D7}, #{D8}, #{D9}, #{D10}, 
		#{D11}, #{D12}, #{D13}, #{D14}, #{D15}, #{D16}, #{D17}, #{D18}, #{D19}, #{D20}, 
		#{D21}, #{D22}, #{D23}, #{D24}, #{D25}, #{D26}, #{D27}, #{D28}, #{D29}, #{D30}, #{D31}, 
		#{creator_id}, #{create_date})
	</insert>
	
	<select id="getPlanMasterIndex" parameterType="Map" resultType="com.byd.bms.plan.model.PlanMasterIndex">
		SELECT DISTINCT
		m.version,o.order_no,f.factory_name,u.display_name,create_date FROM
		BMS_PLAN_MASTER_PLAN m
		LEFT JOIN BMS_OR_ORDER o ON m.order_id = o.id
		LEFT JOIN BMS_BASE_FACTORY f ON m.factory_id = f.id
		LEFT JOIN BMS_BASE_USER u ON m.creator_id = u.id where 1=1
		<if test="factory_id!=''">
			and m.factory_id = #{factory_id}
		</if>
		<if test="order_no!=''">
			and o.order_no like CONCAT('%',#{order_no},'%')
		</if>
		AND flag = '0'
		ORDER BY m.version DESC
		<if test="offset!=null">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	
	<select id="getPlanMasterList" parameterType="Map" resultType="com.byd.bms.plan.model.PlanMasterPlan">
		SELECT
		m.D1+m.D2+m.D3+m.D4+m.D5+m.D6+m.D7+m.D8+m.D9+m.D10+m.D11+m.D12+m.D13+m.D14+m.D15+m.D16+m.D17+m.D18+m.D19+m.D20+
		m.D21+m.D22+m.D23+m.D24+m.D25+m.D26+m.D27+m.D28+m.D29+m.D30+m.D31 AS
		sumQty, k.key_name AS plan_code_keyname, m.*,o.order_no,f.factory_name
		FROM BMS_PLAN_MASTER_PLAN m
		LEFT JOIN BMS_OR_ORDER o ON m.order_id = o.id
		LEFT JOIN BMS_BASE_FACTORY f ON
		m.factory_id = f.id
		LEFT JOIN
		BMS_BASE_KEY k ON m.plan_code_id=k.id
		where 1=1
		<if test="version!=''">
			AND version = #{version}
			AND flag = (SELECT MAX(flag+0)
			FROM
			BMS_PLAN_MASTER_PLAN WHERE version = #{version})
		</if>
		<if test="order_no!=''">
			and order_id = (SELECT id FROM BMS_OR_ORDER WHERE
			order_no=#{order_no})
			AND factory_id = #{factory_id}
			AND version =
			(SELECT MAX(version) FROM BMS_PLAN_MASTER_PLAN WHERE
			order_id =
			(SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no}) AND
			factory_id =
			#{factory_id} AND plan_month=#{plan_month})
			AND flag =
			(SELECT
			MAX(flag+0) FROM BMS_PLAN_MASTER_PLAN WHERE version =(SELECT
			MAX(version) FROM BMS_PLAN_MASTER_PLAN WHERE order_id = (SELECT id
			FROM BMS_OR_ORDER WHERE order_no=#{order_no}) AND factory_id =
			#{factory_id} AND plan_month=#{plan_month}) AND
			plan_month=#{plan_month})
			AND plan_month=#{plan_month}
			ORDER BY version
			DESC,flag
			DESC,plan_month,plan_code_id
		</if>
	</select>
	
	<select id="getPlanIssed" parameterType="Map" resultType="Map">
		SELECT
		plan_code_id,plan_date FROM BMS_PLAN_PRODUCTION_PLAN
		WHERE order_id =
		(SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no})
		AND factory_id =
		#{factory_id}
	</select>
	
	<insert id="insertMasterPlan" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanMasterPlan">
		<![CDATA[
		insert into BMS_PLAN_MASTER_PLAN (
		version,order_id,factory_id,plan_code_id,plan_month,flag,D1,D2,D3,D4,D5,D6,D7,D8,D9,D10,D11,D12,D13,D14,D15,D16,D17,
		D18,D19,D20,D21,D22,D23,D24,D25,D26,D27,D28,D29,D30,D31,creator_id,create_date)
		values(
		#{version},(SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no}),(SELECT id FROM BMS_BASE_FACTORY WHERE factory_name=#{factory_name}),
		(SELECT id FROM BMS_BASE_KEY WHERE key_code = 'PLAN_CODE' AND key_name = #{plan_code_keyname}),#{plan_month},#{flag},#{D1},#{D2},#{D3},#{D4},#{D5},#{D6},#{D7},
		#{D8},#{D9},#{D10},#{D11},#{D12},#{D13},#{D14},#{D15},#{D16},#{D17},#{D18},#{D19},#{D20},#{D21},#{D22},#{D23},#{D24},
		#{D25},#{D26},#{D27},#{D28},#{D29},#{D30},#{D31},#{creator_id},#{create_date})
		]]>
	</insert>
	
	<update id="updatePlanMasterInfo" parameterType="com.byd.bms.plan.model.PlanMasterPlan">
		<![CDATA[
		UPDATE BMS_PLAN_MASTER_PLAN SET version=#{version},order_id=#{order_id},factory_id=#{factory_id},plan_code_id=#{plan_code_id},plan_month=#{plan_month},
		flag=#{flag},D1=#{D1},D2=#{D2},D3=#{D3},D4=#{D4},D5=#{D5},D6=#{D6},D7=#{D7},D8=#{D8},D9=#{D9},D10=#{D10},D11=#{D11},
		D12=#{D12},D13=#{D13},D14=#{D14},D15=#{D15},D16=#{D16},D17=#{D17},D18=#{D18},D19=#{D19},D20=#{D20},D21=#{D21},D22=#{D22},
		D23=#{D23},D24=#{D24},D25=#{D25},D26=#{D26},D27=#{D27},D28=#{D28},D29=#{D29},D30=#{D30},D31=#{D31}
		WHERE id=#{id}
		]]>
	</update>
	
	<insert id="insertOperateChangeLog" useGeneratedKeys="true"
		keyProperty="id" parameterType="com.byd.bms.util.model.BmsBaseOperateChangeLog">
		<![CDATA[
		insert into BMS_BASE_OPERATE_CHANGE_LOG (
		operate_change_type_id,table_name,field_id,field_name,old_value,new_value,changer_id,change_date)
		VALUES(
		#{operate_change_type_id},#{table_name},#{field_id},#{field_name},#{old_value},#{new_value},#{changer_id},#{change_date})
		]]>
	</insert>
	
	<select id="checkPlanIssuanceList" parameterType="Map" resultType="Map">
	SELECT a.*,o.order_no,c.product_qty FROM (SELECT pp.factory_id,pp.order_id,COUNT(pp.D#{day}) AS count_num 
	FROM BMS_PLAN_MASTER_PLAN pp WHERE pp.factory_id = #{factory_id} 
		AND pp.plan_month =#{issuance_month} GROUP BY pp.order_id ORDER BY order_id) a
		LEFT JOIN BMS_OR_FACTORY_ORDER_CONFIG c ON a.order_id = c.order_id AND a.factory_id = c.factory_id
		LEFT JOIN BMS_OR_ORDER o ON a.order_id = o.id
	</select>
	
	<select id="getPlanIssuanceList" parameterType="Map" resultType="com.byd.bms.plan.model.PlanIssuance">
	SELECT
	f.order_config_name,a.order_id,a.order_config_id,a.product_qty,a.sequence,sum(IFNULL(p.plan_qty,0))
	AS issed_qty,  concat(o.order_no,' ',o.order_name,t.internal_name,' ',ifnull(fo.production_qty,0),'Âè∞') as order_no 
	FROM BMS_OR_FACTORY_ORDER_CONFIG a
	LEFT JOIN BMS_OR_ORDER_CONFIG f ON a.order_config_id = f.id
	LEFT JOIN BMS_PLAN_PRODUCTION_PLAN p ON a.order_config_id = p.order_config_id
	LEFT JOIN BMS_OR_ORDER o ON a.order_id = o.id
 	LEFT JOIN BMS_OR_FACTORY_ORDER fo on fo.order_id=o.id and fo.factory_id=a.factory_id
	LEFT JOIN BMS_BASE_BUS_TYPE t ON t.id = o.bus_type_id 
	WHERE a.factory_id = #{factory_id}
		<if test="order_no!=''">
		AND a.order_id = (SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no})
		</if>
		<if test="order_no==''">
		AND a.order_id IN
		(SELECT a.order_id FROM (
		SELECT pp.order_id,COUNT(pp.D#{day}) AS count_num FROM BMS_PLAN_MASTER_PLAN pp WHERE pp.factory_id = #{factory_id}
		AND pp.plan_month = #{issuance_month} GROUP BY pp.order_id) a
		WHERE a.count_num >0)
		</if>
		GROUP BY
		order_config_name,order_id
		ORDER BY a.order_id,a.sequence 
	</select>
	
	<select id="getPlanIssuanceTotal" parameterType="Map" resultType="com.byd.bms.plan.model.PlanIssuanceTotal">
		SELECT k.value AS key_value, k.key_name, d#{day} AS num from BMS_PLAN_MASTER_PLAN m
		LEFT JOIN BMS_BASE_KEY k ON m.plan_code_id = k.id
		WHERE m.plan_month = #{month} AND m.order_id = #{order_id}
		AND m.factory_id = #{factory_id}
		AND m.flag = (SELECT MAX(flag+0) FROM BMS_PLAN_MASTER_PLAN n WHERE
		n.plan_month = #{month} AND n.order_id = #{order_id} AND n.factory_id = #{factory_id})		
		AND version = (SELECT max(version) FROM BMS_PLAN_MASTER_PLAN WHERE factory_id = #{factory_id} 
		and order_id =#{order_id}
		and plan_month = #{month}) order by (key_value + 0)
	</select>
	
	<select id="getProductionPlanIssuanceList" parameterType="Map" resultType="com.byd.bms.plan.model.PlanProductionPlan">
		SELECT * FROM BMS_PLAN_PRODUCTION_PLAN WHERE factory_id = #{factory_id} AND
		plan_date = #{plan_date} AND order_id = #{order_id}
	</select>
	
	<select id="getPlanIssuanceCount" parameterType="Map" resultType="com.byd.bms.plan.model.PlanIssuanceCount">
		SELECT k.value AS plan_code_value,p.order_id,p.factory_id,p.order_config_id,sum(IFNULL(p.plan_qty,0)) AS
		issed_qty FROM BMS_BASE_KEY k
		LEFT JOIN BMS_PLAN_PRODUCTION_PLAN p ON p.plan_code_value = k.value
		WHERE k.key_code = 'PLAN_CODE' AND k.delete_flag='0'
		AND (p.order_id = #{order_id} OR ISNULL(p.order_id))
		AND (p.factory_id = #{factory_id} OR ISNULL(p.factory_id))
		AND p.order_config_id = #{order_config_id} AND p.plan_date = #{plan_date}
		GROUP BY k.id
	</select>
	
	<select id="getPlanConfigQty" parameterType="int" resultType="int">
		SELECT config_qty FROM BMS_OR_ORDER_CONFIG WHERE id = #{order_config_id}
	</select>
	
	<select id="getPlanConfigIssedQty" parameterType="Map" resultType="com.byd.bms.plan.model.PlanConfigIssedQty">
		SELECT plan_code_value,SUM(plan_qty) AS sum_plan_qty FROM
		BMS_PLAN_PRODUCTION_PLAN
		WHERE factory_id = #{factory_id} AND order_id = #{order_id} AND
		order_config_id = #{order_config_id}
		GROUP BY plan_code_value
	</select>
	
	<select id="getOrderIdByConfigId" parameterType="String" resultType="String">
		SELECT order_id FROM BMS_OR_ORDER_CONFIG WHERE id = #{config_id}
	</select>
	
	<select id="getOrderInfoByOrderID" parameterType="Map" resultType="com.byd.bms.order.model.BmsOrder">
		SELECT o.*,t.bus_type_code AS 'bus_type' FROM BMS_OR_ORDER o
		LEFT OUTER JOIN BMS_BASE_BUS_TYPE t ON o.bus_type_id = t.id
		WHERE o.id = #{order_id}
	</select>
	
	<insert id="insertPlanIssuance" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanProductionPlan">
		<![CDATA[
		insert into BMS_PLAN_PRODUCTION_PLAN (
		order_id,factory_id,plan_code_value,plan_date,order_config_id,plan_qty,plan_status,creator_id,creat_date,releaser_id,release_date)
		VALUES(
		(SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no}),#{factory_id},#{plan_code_value},#{plan_date},#{order_config_id},#{plan_qty},#{plan_status},#{creator_id},
		#{creat_date},#{releaser_id},#{release_date})
		]]>
	</insert>
	
	<select id="getFactoryOrderDetail" parameterType="Map" resultType="Map">		
		SELECT o.id,o.factory_id,o.order_id,o.production_qty,o.busnum_start,o.busnum_end,o.bus_number_start,(o.busnum_end - o.busnum_start + 1) AS qty, o.bus_number_count,
		(SELECT ifnull(max(cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)),0) FROM BMS_PLAN_BUS where order_id=o.order_id and factory_id=o.factory_id and factory_order_id=o.id) as maxbusnum,
		(SELECT ifnull(min(cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)),0) FROM BMS_PLAN_BUS where order_id=o.order_id and factory_id=o.factory_id and factory_order_id=o.id) as minbusnum
		FROM BMS_OR_FACTORY_ORDER o 
		WHERE o.order_id = (SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no})
		AND o.factory_id = #{factory_id}
	</select>
	
	<insert id="insertPlanBusNumber" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanBusNumber">
		<![CDATA[
		insert into BMS_PLAN_BUS_NUMBER (bus_serial_number,bus_number,creator_id,creat_date,print_sign,printer_id,print_date,print_times)
		VALUES(
		(select a.sn from (SELECT IFNULL(max(cast(bus_serial_number as unsigned)) +1,CONCAT(#{year},'00001')) AS sn FROM BMS_PLAN_BUS_NUMBER WHERE left(bus_serial_number,4) = #{year}) a),
		(CONCAT(#{bus_code},'-',#{order_code},'-',#{year},'-',LPAD(#{num},5,'0') )),
		#{creator_id},#{creat_date},#{print_sign},#{printer_id},#{print_date},#{print_times})
		]]>
	</insert>
	
	<insert id="insertPlanBus" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanBus">
		<![CDATA[
		insert into BMS_PLAN_BUS (
		factory_id,production_plan_id,bus_number,status,order_id,order_config_id,sequence,vin,customer_number,left_motor_number,right_motor_number,
		bus_color,bus_seats,factory_order_id)
		VALUES(#{factory_id},#{production_plan_id},
		(SELECT bus_number FROM BMS_PLAN_BUS_NUMBER WHERE id=#{bus_number_id}),
		#{status},(SELECT id FROM BMS_OR_ORDER WHERE order_no=#{order_no}),#{order_config_id},#{sequence},#{vin},#{customer_number},
		#{left_motor_number},#{right_motor_number},#{bus_color},#{bus_seats},#{factory_order_id})
		]]>
	</insert>
	
	<update id="updateFactoryOrder" parameterType="int">
		<![CDATA[
		UPDATE BMS_OR_FACTORY_ORDER SET bus_number_count = bus_number_count + 1 WHERE id = #{factory_order_id}
		]]>
	</update>
	
	<insert id="addPause" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.plan.model.PlanPause">
		INSERT INTO BMS_PLAN_STOPLINE
		(factory_id, workshop_id, line, bus_type, order_list, order_desc, reason_type_id, 
		detailed_reason, duty_department_id, human_lossed, capacity_lossed, start_time, 
		pend_time, end_time, hours, memo,create_user,create_time)
		VALUES(#{factory_id}, #{workshop_id}, #{line}, #{bus_type}, #{order_list}, #{order_desc}, #{reason_type_id}, 
		#{detailed_reason}, #{duty_department_id}, #{human_lossed}, #{capacity_lossed}, #{start_time}, 
		#{pend_time}, #{end_time}, #{hours}, #{hours}, #{create_user}, #{create_time})
	</insert>
	
	<select id="getPauseList" parameterType="Map" resultType="com.byd.bms.plan.model.PlanPause">
	SELECT P.*,O1.name AS factory_name,O2.name AS workshop_name,K.key_name as reason_type
	FROM BMS_PLAN_STOPLINE P
	LEFT JOIN BMS_BASE_ORG O1 ON P.factory_id = O1.id
	LEFT JOIN BMS_BASE_ORG O2 ON P.workshop_id = O2.id
	LEFT JOIN BMS_BASE_KEY K ON P.reason_type_id = K.value AND K.key_code='ABNORMAL_REASON'
	WHERE 1=1 
	<if test="factory_id!='' and factory_id!=null">
		AND P.factory_id = #{factory_id}
	</if>
	<if test="workshop_id!='' and workshop_id!=null">
		AND P.workshop_id = #{workshop_id}
	</if>
	<if test="line!='' and line!=null">
		AND P.line = #{line}
	</if>
	<if test="order_no !='' and order_no!=null">
		and find_in_set(P.order_list,#{order_no})>0
	</if>
	<if test="reason_type_id != '' and reason_type_id!=null">
		AND P.reason_type_id = #{reason_type_id}
	</if>
	<if test="start_time!='' and start_time!=null">
		AND P.start_time >= #{start_time}
	</if>
	<if test="end_time!='' and ed_time!=null">
		AND P.start_time &lt;= #{end_time}
	</if>
	<if test="start_time2!='' and start_time2!=null">
		AND P.end_time >= #{start_time2}
	</if>
	<if test="end_time2!='' and ed_time2!=null">
		AND P.end_time &lt;= #{end_time2}
	</if>
	<if test="start !=null">
		LIMIT #{start} ,#{length} 
	</if>	
	</select>
	
</mapper>
