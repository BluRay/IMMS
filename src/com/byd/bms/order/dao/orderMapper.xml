<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.order.dao.IOrderDao">

	<select id="getOrderList" parameterType="Map" resultType="Map">
		SELECT f.production_qty,f.busnum_start,f.busnum_end,a.factory_name area,a.id AS 'factory_id',a.factory_name,f.edit_date,u.display_name as 'user_name',
		t.bus_type_code,o.*,CONCAT(o.order_name,t.bus_type_code,o.order_qty,'台') AS 'order_name_str',f.status,
		f.bus_number_start,(f.bus_number_start+f.busnum_end-f.busnum_start) bus_number_end
		FROM BMS_OR_ORDER o			
		LEFT JOIN BMS_OR_FACTORY_ORDER f ON f.order_id = o.id
		LEFT JOIN BMS_BASE_FACTORY a ON f.factory_id = a.id 
		LEFT JOIN BMS_BASE_BUS_TYPE t ON o.bus_type_id = t.id 
		left join BMS_BASE_USER u on f.editor_id = u.id 
		where 1=1
		<if test="orderNo !=null and orderNo !=''">
			and o.order_no like CONCAT('%',#{orderNo},'%')   
		</if>
		<if test="orderName !=null and orderName !=''">
			and o.order_name like CONCAT('%',#{orderName},'%')   
		</if>
		<if test="orderStatus !=null and orderStatus !=''">
			and f.status = #{orderStatus} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.productive_year = #{actYear} 
		</if>
		<if test="factory !=null and factory !=''">
			and f.factory_id = #{factory} 
		</if>
		<if test="orderColumn==null">
			ORDER BY id DESC,d.busnum_start ASC
		</if>
		<if test="orderColumn !=null">
			ORDER BY #{orderColumn} ASC
		</if>
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>			
	</select>
	
	<select id="getOrderTotalCount" parameterType="Map" resultType="int">
		SELECT count(o.id) FROM BMS_OR_ORDER o
		LEFT JOIN BMS_OR_FACTORY_ORDER f on o.id=f.order_id
		LEFT JOIN BMS_BASE_FACTORY a ON f.factory_id = a.id 
		<if test="orderNo !=null and orderNo !=''">
			and o.order_no like CONCAT('%',#{orderNo},'%')   
		</if>
		<if test="orderName !=null and orderName !=''">
			and o.order_name like CONCAT('%',#{orderName},'%')   
		</if>
		<if test="orderStatus !=null and orderStatus !=''">
			and f.status = #{orderStatus} 
		</if>
		<if test="actYear !=null and actYear !=''">
			and o.productive_year = #{actYear} 
		</if>
		<if test="factory !=null and factory !=''">
			and f.factory_id = #{factory} 
		</if>
	</select>
	
	<select id="getBusNumberStart" parameterType="Map" resultType="int">
		select ifnull(max(bus_number_start+busnum_end-busnum_start),0)
		from BMS_OR_FACTORY_ORDER
		where bus_number_start=(
		select max(od.bus_number_start)
		from BMS_OR_FACTORY_ORDER od
		left join BMS_OR_ORDER o on od.order_id=o.id
		where o.productive_year = #{productive_year} and o.order_type='标准订单')
	</select>
	
	<select id="getOrderDetailList" parameterType="Map" resultType="com.byd.bms.order.model.BmsFactoryOrderDetail">
		select d.id id,d.busnum_start busnum_start,d.busnum_end busnum_end,d.id factory_order_id,(d.busnum_end-d.busnum_start+1) production_qty,d.factory_id factory_id,o.order_no order_no,o.order_name order_name,
		o.order_code order_code,o.order_type order_type,o.order_qty order_qty,o.productive_year productive_year,t.bus_type_code bus_type_code,
		(SELECT ifnull(max(cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)),0) FROM BMS_PLAN_BUS where order_id=d.order_id and factory_id=d.factory_id and factory_order_detail_id=d.id) maxbusnum,
		(SELECT ifnull(min(cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)),0) FROM BMS_PLAN_BUS where order_id=d.order_id and factory_id=d.factory_id and factory_order_detail_id=d.id) minbusnum,
		d.order_id order_id,o.delivery_date delivery_date,f.factory_name factory_name,d.editor_id editor_id,d.edit_date edit_date,d.bus_number_count bus_number_count,d.bus_number_start bus_number_start
		from BMS_OR_FACTORY_ORDER d
		left join BMS_BASE_FACTORY f on f.id=d.factory_id
		left join BMS_OR_ORDER o on o.id=d.order_id
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id = t.id
		where 1=1
		<if test="search_order_no!=null">
			and o.order_no like CONCAT('%',#{search_order_no},'%')   
		</if>
		<if test="search_order_name!=null">
			and o.order_name like CONCAT('%',#{search_order_name},'%')   
		</if>
		<if test="search_productive_year!=null">
			and o.productive_year = #{search_productive_year} 
		</if>
		<if test="search_factory!=null">
			and d.factory_id = #{search_factory} 
		</if>
		<if test="order_id!=null">
			and d.order_id = #{order_id} 
		</if>
		ORDER BY d.busnum_start
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>			
	</select>
	
	<update id="deleteFactoryOrderById" parameterType="int">
		delete from BMS_OR_FACTORY_ORDER where id=#{factory_order_id}
	</update>
	
	<update id="deleteFactoryOrderNoProduction" parameterType="int">
		delete from BMS_OR_FACTORY_ORDER where order_id=#{order_id} and production_qty='0'
	</update>
	
	<insert id="insertFactoryOrder" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.order.model.BmsFactoryOrderDetail">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		<![CDATA[
		insert into BMS_OR_FACTORY_ORDER(order_id,factory_id,production_qty,busnum_start,busnum_end,bus_number_start,bus_number_count,editor_id,edit_date) 
		values(#{order_id},#{factory_id},#{production_qty},#{busnum_start},#{busnum_end},#{bus_number_start},
		(SELECT count(bus_number) FROM  BMS_PLAN_BUS WHERE order_id = #{order_id}
		AND welding_online_date IS NOT NULL 
		AND RIGHT(bus_number,5) + 0 >= ${bus_number_start} 
		AND RIGHT(bus_number,5) + 0 <= (${busnum_end} - ${busnum_start} + ${bus_number_start} + 0)
		)
		,#{editor_id},#{edit_date})
		]]>
	</insert>
	
	<update id='updateFactoryOrder' parameterType="com.byd.bms.order.model.BmsFactoryOrderDetail">
		update BMS_OR_FACTORY_ORDER set production_qty=#{production_qty},busnum_start=#{busnum_start},
		busnum_end=#{busnum_end},bus_number_start=#{bus_number_start},editor_id=#{editor_id},edit_date=#{edit_date}
		where id=#{factory_order_id}
	</update>
	
	<update id="updateOrder" parameterType="com.byd.bms.order.model.BmsOrder">
		update BMS_OR_ORDER set delivery_date=#{delivery_date},memo=#{memo}
		where id=#{id}
	</update>
	
	<select id="queryOrderSerial" parameterType="map" resultType="String">
		<![CDATA[
 			select max(order_no) from BMS_OR_ORDER where order_no like concat('%',#{year},'%')
 		]]>
	</select>
	
	<insert id="insertOrder" useGeneratedKeys="true" keyProperty="id" parameterType="com.byd.bms.order.model.BmsOrder">
		<![CDATA[
			insert into BMS_OR_ORDER(order_no,order_name,order_code,order_type,bus_type_id,order_qty,productive_year,delivery_date,customer,memo,editor_id,edit_date) 
			values(#{order_no},#{order_name},#{order_code},#{order_type},#{bus_type_id},#{order_qty},#{productive_year},#{delivery_date},#{customer},#{memo},#{editor_id},#{edit_date})
		]]>
	</insert>
	
	<select id="queryBusNumberByOrder" parameterType="Map" resultType="Map">
		SELECT b.id,b.factory_id,f.factory_name,b.order_id,b.bus_number,b.vin,b.latest_process_id,p.process_name,
		o.order_no,o.order_name,o.order_qty FROM BMS_PLAN_BUS b
		LEFT OUTER JOIN BMS_BASE_FACTORY f ON b.factory_id = f.id
		LEFT OUTER JOIN BMS_OR_ORDER o ON b.order_id = o.id
		LEFT OUTER JOIN BMS_BASE_PROCESS p ON b.latest_process_id = p.id
		WHERE b.order_id = #{order_id} 
		<if test="factory_id != null">
		 and b.factory_id = #{factory_id} 
		</if>
		order by cast(reverse(substr(reverse(bus_number),1,instr(reverse(bus_number),'-')-1)) as signed)
	</select>
	
	<select id="getOrderConfigList" parameterType="Map" resultType="Map">
		select o.id,c.id config_id,o.order_no,CONCAT(o.order_name,t.bus_type_code,o.order_qty,'台') AS order_name_str,
		o.productive_year,o.delivery_date,c.battery_capacity,c.rated_voltage,c.spring_num,c.tire_type,c.passenger_num,
		o.order_qty,c.order_config_name,c.sap_materialNo,c.material,c.config_file,c.config_qty,c.customer,c.bus_seats
		from BMS_OR_ORDER o
		left join BMS_OR_ORDER_CONFIG c on o.id=c.order_id
		left join BMS_BASE_BUS_TYPE t on o.bus_type_id=t.id
		where 1=1
		<if test="orderNo !=null and orderNo !=''">
			and o.order_no=#{orderNo}
		</if>
		<if test="orderName !=null and orderName !=''">
			and o.order_name like concat('%',#{orderName},'%')
		</if>
		<if test="actYear !=null">
			and o.productive_year=#{actYear}
		</if>
			order by o.order_no desc
		<if test="start !=null">
			limit #{start},#{length}
		</if>
		
	</select>
	
	<select id="getConfigTotalCount" parameterType="Map" resultType="int">
		select count(o.id)
		from BMS_OR_ORDER o
		left join BMS_OR_ORDER_CONFIG c on o.id=c.order_id
		where 1=1
		<if test="orderNo !=null and orderNo !=''">
			and o.order_no=#{orderNo}
		</if>
		<if test="orderName !=null and orderName !=''">
			and o.order_name like concat('%',#{orderName},'%')
		</if>
		<if test="actYear !=null">
			and o.productive_year=#{actYear}
		</if>
	</select>
	
	<select id="queryConfigDetailList" parameterType="String" resultType="Map">
		SELECT * FROM BMS_OR_ORDER_CONFIG_DETAIL 
		WHERE order_config_id=#{configId}
	</select>
	
	<insert id="saveOrderConfig" parameterType="Map"   useGeneratedKeys="true" keyProperty="id" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_OR_ORDER_CONFIG (order_id,sap_materialNo,material,order_config_name,customer,config_qty,
		editor_id,edit_date,battery_capacity,rated_voltage,spring_num,tire_type,passenger_num,bus_seats)
		values(#{order_id},#{materialNo},#{material},#{config_name},#{customer},#{config_qty},#{editor_id},
		#{edit_date},#{battery_capacity},#{rated_voltage},#{spring_num},#{tire_type},#{passenger_num},#{bus_seats})
	</insert>
	
	<update id="updateOrderConfig" parameterType="Map">
		update BMS_OR_ORDER_CONFIG 
		 <trim prefix="SET" suffixOverrides=","> 
			<if test="sap_materialNo !=null">
				sap_materialNo=#{materialNo},
			</if>
			<if test="material !=null">
				material=#{material},
			</if>
			<if test="order_config_name !=null">
				order_config_name=#{config_name},
			</if>
			<if test="customer !=null">
				customer=#{customer},
			</if>
			<if test="config_qty !=null">
				config_qty=#{config_qty},
			</if>
			<if test="editor_id !=null">
				editor_id=#{editor_id},
			</if>
			<if test="edit_date !=null">
				edit_date=#{edit_date},
			</if>
			<if test="battery_capacity !=null">
				battery_capacity=#{battery_capacity},
			</if>
			<if test="rated_voltage !=null">
				rated_voltage=#{rated_voltage},
			</if>
			<if test="spring_num !=null">
				spring_num=#{spring_num},
			</if>
			<if test="tire_type !=null">
				tire_type=#{tire_type},
			</if>
			<if test="bus_seats !=null">
				bus_seats=#{bus_seats},
			</if>
			<if test="passenger_num !=null">
				passenger_num=#{passenger_num}
			</if>
		</trim>
		where id=#{config_id}
	</update>
	
	<update id="deleteConfigDetailById" parameterType="int">
		delete from BMS_OR_ORDER_CONFIG_DETAIL where order_config_id=#{config_id}
	</update>
	
	<insert id="saveConfigDetails" parameterType="Map"  useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_OR_ORDER_CONFIG_DETAIL
		(order_config_id,parts_type,sap_mat,components_no,components_name,size,type,vendor,workshop,notes)
		values
		<foreach collection="detail_list" item="detail" index="index" separator=",">
			(#{config_id},#{detail.parts_type},#{detail.sap_mat},#{detail.components_no},#{detail.components_name},
			#{detail.size},#{detail.type},#{detail.vendor},#{detail.workshop},#{detail.notes})
		</foreach>
	</insert>
</mapper>
