<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.setting.dao.IBaseDataDao">
	<!-- 工厂 -->
	<resultMap type="com.byd.bms.setting.model.BmsBaseFactory" id="factoryMap">
		<id property="id" column="id" />
		<result property="factoryCode" column="factory_code" />
		<result property="factoryName" column="factory_name" />
		<result property="shortName" column="short_name" />
		<result property="area" column="area" />
		<result property="assemblyCode" column="vin_assembly_code" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="memo" column="memo" />
		<result property="editorId" column="editor_id" />
		<result property="editor" column="editor" />
		<result property="editDate" column="edit_date" />
		<result property="capacity" column="capacity" />
	</resultMap>
	<select id="getFactoryList" parameterType="Map" resultMap="factoryMap">
		select f.*,u.display_name editor from BMS_BASE_FACTORY f left join
		BMS_BASE_USER u on u.staff_number=f.editor_id where 1=1 and f.delete_flag='0'
		<if test="factory!=null and factory!=''">
			and (f.factory_name like CONCAT('%',#{factory},'%') or
			f.factory_code like CONCAT('%',#{factory},'%') )
		</if>
		<if test="assembcode!=null and assembcode!=''">
			and f.vin_assembly_code = #{assembcode}
		</if>
		<if test="start !=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>

	</select>
	<select id="getFactoryTotalCount" parameterType="Map"
		resultType="int">
		select count(f.id) from BMS_BASE_FACTORY f left join BMS_BASE_USER u
		on u.staff_number=f.editor_id where 1=1 and f.delete_flag='0'
		<if test="factory!=null and factory!=''">
			and (f.factory_name like CONCAT('%',#{factory},'%') or
			f.factory_code like CONCAT('%',#{factory},'%') )
		</if>
		<if test="assembcode!=null and assembcode!=''">
			and f.vin_assembly_code = #{assembcode}
		</if>
	</select>
	<insert id="addFactory" parameterType="com.byd.bms.setting.model.BmsBaseFactory">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into BMS_BASE_FACTORY
		(factory_code,factory_name,area,vin_assembly_code,memo,editor_id,edit_date,capacity,short_name)
		values(#{factoryCode},#{factoryName},#{area},#{assemblyCode},#{memo},#{editorId},#{editDate},#{capacity},#{shortName})
	</insert>
	<update id="updateFactory" parameterType="com.byd.bms.setting.model.BmsBaseFactory">
		update
		BMS_BASE_FACTORY set
		factory_code=#{factoryCode},factory_name=#{factoryName},vin_assembly_code=#{assemblyCode},
		area=#{area},memo=#{memo},editor_id=#{editorId},edit_date=#{editDate},capacity=#{capacity},short_name=#{shortName}
		where id=#{id}
	</update>
	<update id="deleteFactory" parameterType="java.util.List">

		update BMS_BASE_FACTORY set delete_flag='1' where id in
		<foreach collection="list" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>

	</update>
	
	<!-- 车间 -->
	<resultMap type="com.byd.bms.setting.model.BmsBaseWorkshop" id="workshopMap">
		<id property="id" column="id" />
		<result property="workshopName" column="workshop_name" />
		<result property="workshopCode" column="workshop_code" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="memo" column="memo" />
		<result property="editorId" column="editor_id" />
		<result property="editDate" column="edit_date" />
		<result property="editor" column="editor" />
	</resultMap>
	<select id="getWorkshopList" parameterType="Map" resultMap="workshopMap">
		SELECT w.id,w.workshop_name,w.workshop_code,w.delete_flag,w.edit_date,w.memo,u.display_name editor from BMS_BASE_WORKSHOP as w left join
		BMS_BASE_USER u on u.staff_number=w.editor_id where 1=1 and w.delete_flag='0'
		<if test="workshopName!=null">
			and (w.workshop_name like CONCAT('%',#{workshopName},'%') or
			w.workshop_code like CONCAT('%',#{workshopName},'%') )
		</if>
		<if test="start !=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	<select id="getWorkshopTotalCount" parameterType="Map"
		resultType="int">
		select count(w.id) from BMS_BASE_WORKSHOP as w left join
		BMS_BASE_USER u on u.staff_number=w.editor_id where 1=1 and w.delete_flag='0'
		<if test="workshopName!=null">
			and (w.workshop_name like CONCAT('%',#{workshopName},'%') or
			w.workshop_code like CONCAT('%',#{workshopName},'%') )
		</if>
	</select>
	<insert id="addWorkshop" parameterType="com.byd.bms.setting.model.BmsBaseWorkshop">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into BMS_BASE_WORKSHOP
		(workshop_name,workshop_code,memo,editor_id,edit_date)
		values(#{workshopName},#{workshopCode},#{memo},#{editorId},#{editDate})
	</insert>
	<update id="updateWorkshop" parameterType="com.byd.bms.setting.model.BmsBaseWorkshop">
		update
		BMS_BASE_WORKSHOP set
		workshop_name=#{workshopName},workshop_code=#{workshopCode},
		memo=#{memo},editor_id=#{editorId},edit_date=#{editDate}
		where id=#{id}
	</update>
	<update id="deleteWorkshop" parameterType="java.util.List">

		update BMS_BASE_WORKSHOP set delete_flag='1' where id in
		<foreach collection="list" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>
	</update>
	
	<!-- 线别表映射 -->
	<resultMap type="com.byd.bms.setting.model.BmsBaseLine" id="lineMap">
		<id property="id" column="id" />
		<result property="lineName" column="line" />
		<result property="deleteFlag" column="delete_flag" />
		<result property="memo" column="memo" />
		<result property="editorId" column="editor_id" />
		<result property="editDate" column="edit_date" />
		<result property="editor" column="editor" />
	</resultMap>
	<select id="getLineList" parameterType="Map" resultMap="lineMap">
		SELECT l.*,u.display_name editor,u.id editorId FROM BMS_BASE_LINE as l 
			LEFT JOIN BMS_BASE_USER u on l.editor_id = u.staff_number 
				where 1=1 and l.delete_flag='0'
		<if test="lineName!=null and lineName!=''">
			and l.line like CONCAT('%',#{lineName},'%')
		</if>
		<if test="start !=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	<select id="getLineTotalCount" parameterType="Map"
		resultType="int">
		SELECT count(l.id) FROM BMS_BASE_LINE as l 
			LEFT JOIN BMS_BASE_USER u on l.editor_id = u.staff_number 
				where 1=1 and l.delete_flag='0'
		
		<if test="lineName!=null and lineName!=''">
			and l.line like CONCAT('%',#{lineName},'%')
		</if>
		
	</select>
	<insert id="addLine" parameterType="com.byd.bms.setting.model.BmsBaseLine">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into BMS_BASE_LINE
		(line,memo,editor_id,edit_date)
		values(#{lineName},#{memo},#{editorId},#{editDate})
	</insert>
	<update id="updateLine" parameterType="com.byd.bms.setting.model.BmsBaseLine">
		update
		BMS_BASE_LINE set
		line=#{lineName},memo=#{memo},editor_id=#{editorId},edit_date=#{editDate}
		where id=#{id}
	</update>
	<update id="deleteLine" parameterType="java.util.List">

		update BMS_BASE_LINE set delete_flag='1' where id in
		<foreach collection="list" item="ids" index="index" open="("
			close=")" separator=",">
			#{ids}
		</foreach>
	</update>
	
	<!-- 工序 -->
	<select id="getProcessList" parameterType="Map" resultType="Map">
		select p.*,k.key_name plan_node_name,u.username editor
		from BMS_BASE_PROCESS p
		left join BMS_BASE_KEY k on p.plan_node_id=k.id
		left join BMS_BASE_USER u on p.editor_id=u.id
		where 1=1 and p.delete_flag !='1'
		<if test="factory !=null and factory !='全部'">
			and p.factory=#{factory}
		</if>
		<if test="workshop !=null and workshop !='全部'">
			and p.workshop=#{workshop}
		</if>
		<if test="line !=null and line !='全部'">
			and p.line=#{line}
		</if>	
		<if test="monitoryPoint_flag !=null and monitoryPoint_flag !=''">
			and p.monitory_point_flag=#{monitoryPoint_flag}
		</if>
		<if test="keyProcess_flag !=null and keyProcess_flag !=''">
			and p.key_process_flag=#{keyProcess_flag}
		</if>
		<if test="planNode_flag ==1">
			and p.plan_node_id !=0
		</if>
		order by p.factory,p.workshop,p.line,cast(substring(p.process_code,3) as signed)
		<if test="start !=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	
	<select id="getProcessTotalCount" parameterType="Map" resultType="int">
		select count(p.id)
		from BMS_BASE_PROCESS p
		where 1=1 and p.delete_flag !='1'
		<if test="factory !=null and factory !='全部'">
			and p.factory=#{factory}
		</if>
		<if test="workshop !=null and workshop !='全部'">
			and p.workshop=#{workshop}
		</if>
		<if test="line !=null and line !='全部'">
			and p.line=#{line}
		</if>	
		<if test="monitoryPoint_flag !=null and monitoryPoint_flag !=''">
			and p.monitory_point_flag=#{monitoryPoint_flag}
		</if>
		<if test="keyProcess_flag !=null and keyProcess_flag !=''">
			and p.key_process_flag=#{keyProcess_flag}
		</if>
		<if test="planNode_flag ==1">
			and p.plan_node_id !=0
		</if>
	</select>
	
	<update id="updateProcess" parameterType="com.byd.bms.setting.model.BmsBaseProcess">
		update BMS_BASE_PROCESS set factory=#{factory},workshop=#{workshop},line=#{line},plan_node_id=#{plan_node_id},
		process_code=#{process_code},process_name=#{process_name},monitory_point_flag=#{monitory_point_flag},
		key_process_flag=#{key_process_flag},memo=#{memo}
		where id=#{id}
	</update>
	
	<insert id="addProcess" parameterType="com.byd.bms.setting.model.BmsBaseProcess" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into BMS_BASE_PROCESS (factory,workshop,line,plan_node_id,process_code,process_name,key_process_flag,monitory_point_flag,memo,editor_id,edit_date)
		values 
		(#{factory},#{workshop},#{line},#{plan_node_id},#{process_code},#{process_name},#{key_process_flag},#{monitory_point_flag},#{memo},#{editor_id},#{edit_date})
	</insert>
	
	<update id="deleteProcess" parameterType="List">
		update BMS_BASE_PROCESS set delete_flag='1'
		where id in
		<foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</update>
	
	<select id="queryProcessConfigList" parameterType="Map" resultType="Map">
		select distinct r.factory,r.order_type,u.username editor,r.edit_date
		from BMS_PD_SCAN_RULE r
		left join BMS_BASE_USER u on r.editor_id=u.id
		where 1=1
		<if test="factory !=null and factory !='全部'">
			and r.factory=#{factory}
		</if>
		<if test="order_type !=null and order_type !='全部'">
			and r.order_type=#{order_type}
		</if>
		<if test="start !=null and length!=-1">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	
	<select id="queryProcessConfigCount" parameterType="Map" resultType="int">
		select count(distinct r.factory,r.order_type)
		from BMS_PD_SCAN_RULE r
		left join BMS_BASE_USER u on r.editor_id=u.id
		where 1=1
		<if test="factory !=null and factory !='全部'">
			and r.factory=#{factory}
		</if>
		<if test="order_type !=null and order_type !='全部'">
			and r.order_type=#{order_type}
		</if>
	</select>
	
	<select id="queryProcessListNoLine" parameterType="Map" resultType="Map">
		select distinct p.workshop,p.process_name ,case  p.monitory_point_flag when '0' then 'N' else 'Y' end as monitory_point_flag,
		case p.key_process_flag when '0' then 'N' else 'Y' end as key_process_flag, ifnull(k.key_name,'') plan_node
		from BMS_BASE_PROCESS p 
		left join BMS_BASE_KEY k on p.plan_node_id=k.id
		where p.delete_flag !='1'
		<if test="factory !=null and factory !=''">
			and p.factory=#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			and p.workshop=#{workshop}
		</if>
		order by cast(substring(p.process_code,3) as signed)
	</select>
	
	<select id="queryProcessConfigDetailList"  parameterType="Map" resultType="Map">
		select r.*,p.monitory_point_flag,p.key_process_flag,p.plan_node
		from BMS_PD_SCAN_RULE r
		left join (
		select distinct p.factory,p.workshop,p.process_name ,case  p.monitory_point_flag when '0' then 'N' else 'Y' end as monitory_point_flag,
				case p.key_process_flag when '0' then 'N' else 'Y' end as key_process_flag, ifnull(k.key_name,'') plan_node
				from BMS_BASE_PROCESS p 
				left join BMS_BASE_KEY k on p.plan_node_id=k.id
				where p.delete_flag !='1' and p.factory=#{factory}
		) p on r.factory=p.factory and p.workshop=r.workshop and r.process_name=p.process_name
		where r.factory=#{factory} and r.order_type=#{order_type}
		order by r.sequence
	</select>
	
	<select id="queryProcessListByFactory" parameterType="Map" resultType="Map">
		select concat('{"process_list":[',group_concat('{"process_name":"',p.process_name,'","monitory_point_flag":"',p.monitory_point_flag,'","key_process_flag":"',p.key_process_flag,'","plan_node":"',p.plan_node,'"}' order by p.seq),']}') as process_list,
		p.workshop
		from(
		select distinct p.workshop,p.process_name ,case  p.monitory_point_flag when '0' then 'N' else 'Y' end as monitory_point_flag,
		case p.key_process_flag when '0' then 'N' else 'Y' end as key_process_flag, ifnull(k.key_name,'') plan_node,cast(substring(p.process_code,3) as signed) seq
		from BMS_BASE_PROCESS p 
		left join BMS_BASE_KEY k on p.plan_node_id=k.id
		where p.delete_flag !='1' and p.factory=#{factory}) p
		group by p.workshop
	</select>
	
	<insert id="insertProcessConfig" parameterType="List">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into BMS_PD_SCAN_RULE (sequence,factory,workshop,order_type,process_name,editor_id,edit_date)
		values
		<foreach collection="list" item="detail" index="index" separator=",">
			(#{detail.sequence},#{detail.factory},#{detail.workshop},#{detail.order_type},#{detail.process_name},
			#{detail.editor_id},#{detail.edit_date})
		</foreach>		
	</insert>
	
	<update id="deleteProcessConfig" parameterType="Map">
		delete from BMS_PD_SCAN_RULE where factory=#{factory} and order_type=#{order_type}
	</update>
	
</mapper>
