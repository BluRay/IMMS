<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.byd.bms.hr.dao.IHrBaseDataDao">
    <select id="getOrgDataTreeList" parameterType="Map" resultType="Map">
		SELECT
         id,CONCAT(parent_id,'') parent_id,name_en as name,name as display_name,org_code as short_name,
         manager,org_type,org_kind,responsibilities,salary_model,customer_no_flag,
         (SELECT COUNT(1) FROM BMS_BASE_ORG f2 WHERE f2.parent_id = t.id) AS sub_count,
         (SELECT name FROM BMS_BASE_ORG f2 WHERE f2.id = t.parent_id) AS parent_name
        FROM BMS_BASE_ORG t  <!--    t left join BMS_BASE_KEY k on t.org_type=k.org_type -->
           WHERE t.deleted = 0 
         <if test="id!=null">
             AND t.id=#{id} 
         </if>
         <if test="parent_id!=null">
             AND t.parent_id=#{parent_id} 
         </if>
         ORDER BY org_type ASC	
	</select>
	<select id="getOrgDataByParentId" parameterType="Map" resultType="Map">
		SELECT t.id,CONCAT(t.parent_id,'') parent_id,t.name_en as name,t.name as display_name,
		   t.org_code as short_name,t.manager,t.org_type,t.org_kind,t.responsibilities,t.foreign_id,
		   (SELECT name FROM BMS_BASE_ORG f2 WHERE f2.id = t.parent_id) AS parent_name,
		   k.key_name as salary_model,customer_no_flag
          from BMS_BASE_ORG t
          left join BMS_BASE_KEY k on t.salary_model = k.value and k.key_code='SALARY_MODEL'
          where 1=1 and t.deleted='0'
		<if test="id!=null and id!=''">
			and t.id=#{id}
		</if>
		<if test="parent_id!=null and parent_id!=''">
			and t.parent_id=#{parent_id}
		</if>
		order by org_kind DESC, sort_number ASC
	</select>
	<!-- 添加组织结构 -->
	<insert id="addOrgData" useGeneratedKeys="true">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		<![CDATA[
			insert into BMS_BASE_ORG(parent_id,org_type,org_kind,name,name_en,foreign_id,org_code,sort_number,manager,responsibilities,deleted,editor_id,edit_date,salary_model,customer_no_flag) 
			values(#{parent_id},#{org_type},#{org_kind},#{name},#{name_en},#{foreign_id},#{org_code},#{sort_number},#{manager},#{responsibilities},#{deleted},#{editor_id},#{edit_date},#{salary_model},#{customer_no_flag})
		]]>
	</insert>
	<!-- 编辑组织结构 -->
	<update id="editOrgData">
			update BMS_BASE_ORG set 
			<if test="parent_id!=''">
			parent_id=#{parent_id},
			</if>
			org_type=#{org_type},org_kind=#{org_kind},name=#{name},name_en=#{name_en},org_code=#{org_code}<!-- ,sort_number=#{sort_number} -->,manager=#{manager},responsibilities=#{responsibilities},deleted=#{deleted},editor_id=#{editor_id},edit_date=#{edit_date},salary_model=#{salary_model},customer_no_flag=#{customer_no_flag}  
			where id=#{id}
	</update>
	<!--删除组织结构 -->
	<update id="deleteOrgData">
		<![CDATA[
			update BMS_BASE_ORG set deleted='1',editor_id=#{editor_id},edit_date=#{edit_date}  
			where id=#{id}
		]]>
	</update>
	<!-- 添加岗位 -->
	<insert id="addPositionData" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			insert into BMS_HR_BASE_JOB(job_no,job_name,basic_besponsibilit,requirements,skill_and_capability,required_train,deleted,editor_id,edit_date) 
			values(#{job_no},#{job_name},#{basic_besponsibilit},#{requirements},#{skill_and_capability},#{required_train},'0',#{editor_id},#{edit_date})
		]]>
	</insert>
	<!-- 编辑岗位 -->
	<update id="editPositionData">
			update BMS_HR_BASE_JOB set 
			job_no=#{job_no},
			job_name=#{job_name},
			basic_besponsibilit=#{basic_besponsibilit},
			requirements=#{requirements},
			skill_and_capability=#{skill_and_capability},
			required_train=#{required_train},
			editor_id=#{editor_id},
			edit_date=#{edit_date}  
			where deleted='0' and id=#{id}
	</update>
	<!--删除岗位 -->
	<update id="deletePositionData" parameterType="String">
		<![CDATA[
			update BMS_HR_BASE_JOB set deleted='1' where id=#{id}
		]]>
	</update>
	
	<select id="getPositionList" parameterType="Map" resultType="Map">
		select t.id,job_no,job_name,basic_besponsibilit,requirements,skill_and_capability,
		required_train,deleted,u.username editor,edit_date from BMS_HR_BASE_JOB t
		left join BMS_BASE_USER u on u.id=t.editor_id
		where 1=1 and t.deleted='0'
		<if test="job_no!=null and job_no!=''">
            and job_no like CONCAT('%',#{job_no},'%')
        </if>
        <if test="job_name!=null and job_name!=''">
            and job_name=#{job_name}
        </if>
        ORDER BY t.id ASC
        <if test="start !=null and start>0">
			LIMIT #{start} ,#{length} 
		</if>
         
	</select>
	<select id="getPositionCount" parameterType="Map" resultType="int">
		select count(1) from BMS_HR_BASE_JOB t where 1=1 and t.deleted='0'
		<if test="job_no!=null and job_no!=''">
            and job_no=#{job_no}
        </if>
        <if test="job_name!=null and job_name!=''">
            and job_name=#{job_name}
        </if>
	</select>
	
	<!-- 获得岗位 -->
	<select id="getPositionData" parameterType="Map" resultType="Map">
		select t.id,job_no,job_name,basic_besponsibilit,requirements,skill_and_capability,
		required_train from BMS_HR_BASE_JOB t 
        where 1=1 and deleted='0'
        <if test="id!=null">
        and id=#{id}
        </if>
	</select>
	<!-- 添加标准人力 -->
	<insert id="addStandardHumanData" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[

			insert into BMS_HR_BASE_STANDARD_HUMAN(type,org_id,factory,workshop,workgroup,
			job_id,job_no,job_name,standard_humans,deleted,editor_id,edit_date) 
			values(#{type},#{org_id},#{factory},#{workshop},#{workgroup},
			#{job_id},#{job_no},#{job_name},#{standard_humans},#{deleted},#{editor_id},#{edit_date})

		]]>
	</insert>
	<!-- 编辑标准人力-->
	<update id="editStandardHumanData">
			update BMS_HR_BASE_STANDARD_HUMAN set 
			standard_humans = #{standard_humans}
			where id=#{id}
	</update>
	<!-- 删除标准人力-->
	<update id="deleteStandardHumanData">
			update BMS_HR_BASE_STANDARD_HUMAN set 
			deleted = '1'
			where id=#{id}
	</update>
	<!-- 获得标准人力 -->
	<select id="getStandardHumanData" parameterType="Map" resultType="Map">
			SELECT h.id,h.job_id,h.job_no,
              h.job_name,h.standard_humans,h.factory,h.workshop,h.workgroup,
              (SELECT count(1) FROM BMS_HR_STAFF s WHERE 1=1 
						AND s.job = h.job_name 
						AND ifnull(s.plant_org,'')=ifnull(h.factory,'') 
						AND ifnull(s.workshop_org,'')=ifnull(h.workshop,'') 
						AND ifnull(s.workgroup_org,'')=ifnull(h.workgroup,'') 

             ) as realHuman
            FROM BMS_HR_BASE_STANDARD_HUMAN h

            WHERE h.deleted='0'
              <if test="org_id!=null and org_id!=''">
              and h.org_id=#{org_id}
			</if>
              <if test="factory!=null and factory!=''" >
              and h.factory=#{factory}
              </if>
              <if test="workshop!=null and workshop!=''">
              and h.workshop=#{workshop}
              </if>
              <if test="workgroup!=null and workgroup!=''">
              and h.workgroup=#{workgroup}
              </if>
               <if test="job_id!=null and job_id!=''">

              and h.job_id=#{job_id}
              </if>
              <if test="job_no!=null and job_no!=''">
              and h.job_no=#{job_no}
              </if>
              <if test="id!=null">
              and h.id=#{id}
              </if>
	</select>
	<select id="getStaffList" resultType="Map" parameterType='Map'>
		SELECT s.* FROM BMS_HR_STAFF s WHERE 1=1
		<if test="orgType==1">
			AND FIND_IN_SET(s.plant_org,#{orgStr})>0
		</if>
		<if test="orgType==2">
			AND FIND_IN_SET(s.plant_org,#{orgStr})>0
			AND FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>
		<if test="orgType==3 ">
			and case when ISNULL(s.plant_org) THEN 1=1 else
			FIND_IN_SET(s.plant_org,#{orgStr})>0 end
			AND FIND_IN_SET(s.workgroup_org,#{orgStr})>0
			and FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>
		<if test="orgType==4 ">
			and case when ISNULL(s.plant_org) THEN 1=1 else
			FIND_IN_SET(s.plant_org,#{orgStr})>0 end			
			AND FIND_IN_SET(s.workgroup_org,#{orgStr})>0
			AND FIND_IN_SET(s.team_org,#{orgStr})>0
			and FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>

		<if test="staff_number!=null and staff_number!=''">
			AND( LOCATE(s.staff_number,#{staff_number})>0 OR
			LOCATE(s.name,#{staff_number})>0 )
		</if>
		<if test="salary_type!=null and salary_type!=''">
			AND s.salary_type = #{salary_type}
		</if>
		<if test="job!=null and job!=''">
			AND s.job LIKE CONCAT('%',#{job},'%')
		</if>
		<if test="workplace!=null and workplace!=''">
			AND s.workplace LIKE CONCAT('%',#{workplace},'%')
		</if>
		<if test="status!=null and status!=''">
			AND s.status = #{status}
		</if>
		
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>	
	</select>
	<select id="getStaffCount" resultType="int" parameterType='Map'>
		SELECT COUNT(s.id) FROM BMS_HR_STAFF s WHERE 1=1
		<if test="orgType==1">
			AND FIND_IN_SET(s.plant_org,#{orgStr})>0
		</if>
		<if test="orgType==2">
			AND FIND_IN_SET(s.plant_org,#{orgStr})>0
			AND FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>
		<if test="orgType==3 ">
			and case when ISNULL(s.plant_org) THEN 1=1 else
			FIND_IN_SET(s.plant_org,#{orgStr})>0 end
			AND FIND_IN_SET(s.workgroup_org,#{orgStr})>0
			and FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>
		<if test="orgType==4 ">
			and case when ISNULL(s.plant_org) THEN 1=1 else
			FIND_IN_SET(s.plant_org,#{orgStr})>0 end			
			AND FIND_IN_SET(s.workgroup_org,#{orgStr})>0
			AND FIND_IN_SET(s.team_org,#{orgStr})>0
			and FIND_IN_SET(s.workshop_org,#{orgStr})>0
		</if>

		<if test="staff_number!=null and staff_number!=''">
			AND( LOCATE(s.staff_number,#{staff_number})>0 OR
			LOCATE(s.name,#{staff_number})>0 )
		</if>
		<if test="salary_type!=null and salary_type!=''">
			AND s.salary_type = #{salary_type}
		</if>
		<if test="job!=null and job!=''">
			AND s.job LIKE CONCAT('%',#{job},'%')
		</if>
		<if test="workplace!=null and workplace!=''">
			AND s.workplace LIKE CONCAT('%',#{workplace},'%')
		</if>
		<if test="status!=null and status!=''">
			AND s.status = #{status}
		</if>
	</select>
	
	<select id="getOrg" parameterType="List" resultType="Map">
			<foreach collection="list" index="index" item="item"
				 separator="UNION ALL" >
					SELECT o1.name plant_org
						<if test="item.dept_org!=null">
							,o2.name dept_org
						</if>
						<if test="item.dept_org==null">
							,'' dept_org
						</if>
						<if test="item.workshop_org!=null">
							,o3.name workshop_org
						</if>
						<if test="item.workshop_org ==null">
							,'' workshop_org
						</if>
						<if test="item.workgroup_org!=null">
							,o4.name workgroup_org
						</if>
						<if test="item.workgroup_org ==null">
							,'' workgroup_org
						</if>
						<if test="item.team_org!=null">
							,o5.name team_org 
						</if>
						<if test="item.team_org ==null">
							,'' team_org 
						</if>
						FROM BMS_BASE_ORG o1
						<if test="item.dept_org!=null">
							LEFT JOIN BMS_BASE_ORG o2 on o1.id = o2.parent_id and o2.deleted = '0' and o2.name = #{item.dept_org}
						</if>
						<if test="item.workshop_org!=null">
							LEFT JOIN BMS_BASE_ORG o3 on 
							<if test="item.dept_org!=null">
							o2.id = o3.parent_id 
							</if>
							<if test="item.dept_org==null">
							o1.id = o3.parent_id 
							</if>
							and o3.deleted = '0' and o3.name = #{item.workshop_org}
						</if>
						<if test="item.workgroup_org!=null">
							LEFT JOIN BMS_BASE_ORG o4 on 
							<if test="item.workshop_org!=null">
								o3.id = o4.parent_id 
							</if>
							<if test="item.workshop_org ==null and item.dept_org!=null">
								o2.id = o4.parent_id 
							</if>
							<if test="item.workshop_org ==null and item.dept_org ==null">
								o1.id = o4.parent_id 
							</if>
							and o4.deleted = '0' and o4.name = #{item.workgroup_org}
						</if>
						<if test="item.team_org!=null">
							LEFT JOIN BMS_BASE_ORG o5 on 
							<if test="item.workgroup_org!=null">
								o4.id = o5.parent_id 
							</if>
							<if test="item.workgroup_org ==null and item.workshop_org!=null">
								o3.id = o5.parent_id 
							</if>
							<if test="item.workgroup_org ==null and item.workshop_org ==null and item.dept_org!=null">
								o2.id = o5.parent_id 
							</if>
							<if test="item.workgroup_org ==null and item.workshop_org ==null and item.dept_org ==null">
								o1.id = o5.parent_id 
							</if>
							and o5.deleted = '0' and o5.name = #{item.team_org}
						</if>
					WHERE o1.name = #{item.plant_org} AND o1.deleted = '0'
			</foreach>
	</select>
	<select id="getStaffListByStaffNumbers" resultType="String" parameterType='Map'>
		SELECT s.staff_number FROM BMS_HR_STAFF s
		WHERE FIND_IN_SET(s.staff_number,#{staff_numbers})>0
	</select>
	<update id="dimissionStaff" parameterType="Map">
		UPDATE BMS_HR_STAFF SET status = '离职',leave_date = #{curTime},editor_id = #{edit_user} WHERE staff_number = #{staff_number}
	</update>
	
		<!--批量信息员工信息 -->
	<insert id="insertStaffs" parameterType="List">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		<foreach collection="list" index="index" item="item"
			separator=";">
			INSERT INTO BMS_HR_STAFF(staff_number,editor_id,edit_date
			<if test="item.name!=null and item.name!=''">
				,name
			</if>
			<if test="item.sex!=null and item.sex!=''">
				,sex
			</if>
			<if test="item.birthday!=null and item.birthday!=''">
				,birthday
			</if>
			<if test="item.age!=null and item.age!=''">
				,age
			</if>
			<if test="item.highest_education!=null and item.highest_education!=''">
				,highest_education
			</if>
			<if test="item.fresh_student!=null and item.fresh_student!=''">
				,fresh_student
			</if>
			<if test="item.political_status!=null and item.political_status!=''">
				,political_status
			</if>
			<if test="item.identity_card!=null and item.identity_card!=''">
				,identity_card
			</if>
			<if
				test="item.factory_incoming_date!=null and item.factory_incoming_date!=''">
				,factory_incoming_date
			</if>
			<if test="item.staff_level!=null and item.staff_level!=''">
				,staff_level
			</if>
			<if test="item.basic_salary!=null and item.basic_salary!=''">
				,basic_salary
			</if>
			<if test="item.skill_parameter!=null and item.skill_parameter!=''">
				,skill_parameter
			</if>
			<if test="item.salary_type!=null and item.salary_type!=''">
				,salary_type
			</if>
			<if test="item.plant_org!=null and item.plant_org!=''">
				,plant_org
			</if>
			<if test="item.dept_org!=null and item.dept_org!=''">
				,dept_org
			</if>
			<if test="item.workshop_org!=null and item.workshop_org!=''">
				,workshop_org
			</if>
			<if test="item.workgroup_org!=null and item.workgroup_org!=''">
				,workgroup_org
			</if>
			<if test="item.team_org!=null and item.team_org!=''">
				,team_org
			</if>
			<if test="item.job!=null and item.job!=''">
				,job
			</if>
			<if test="item.status!=null and item.status!=''">
				,status
			</if>
			<if test="item.join_channel!=null and item.join_channel!=''">
				,join_channel
			</if>
			<if test="item.leave_way!=null and item.leave_way!=''">
				,leave_way
			</if>
			<if test="item.leave_date!=null and item.leave_date!=''">
				,leave_date
			</if>
			<if test="item.leave_reason!=null and item.leave_reason!=''">
				,leave_reason
			</if>
			<if test="item.last_company!=null and item.last_company!=''">
				,last_company
			</if>
			<if test="item.last_leave_reason!=null and item.last_leave_reason!=''">
				,last_leave_reason
			</if>
			<if test="item.phone!=null and item.phone!=''">
				,phone
			</if>
			<if test="item.family_address!=null and item.family_address!=''">
				,family_address
			</if>
			<if test="item.nation!=null and item.nation!=''">
				,nation
			</if>
			<if test="item.corporation!=null and item.corporation!=''">
				,corporation
			</if>
			<if test="item.workplace!=null and item.workplace!=''">
				,workplace
			</if>
			)
			VALUES(#{item.staff_number},#{item.editor},#{item.edit_date}
			<if test="item.name!=null and item.name!=''">
				,#{item.name}
			</if>
			<if test="item.sex!=null and item.sex!=''">
				,#{item.sex}
			</if>
			<if test="item.birthday!=null and item.birthday!=''">
				,#{item.birthday}
			</if>
			<if test="item.age!=null and item.age!=''">
				,#{item.age}
			</if>
			<if test="item.highest_education!=null and item.highest_education!=''">
				,#{item.highest_education}
			</if>
			<if test="item.fresh_student!=null and item.fresh_student!=''">
				,#{item.fresh_student}
			</if>
			<if test="item.political_status!=null and item.political_status!=''">
				,#{item.political_status}
			</if>
			<if test="item.identity_card!=null and item.identity_card!=''">
				,#{item.identity_card}
			</if>
			<if
				test="item.factory_incoming_date!=null and item.factory_incoming_date!=''">
				,#{item.factory_incoming_date}
			</if>
			<if test="item.staff_level!=null and item.staff_level!=''">
				,#{item.staff_level}
			</if>
			<if test="item.basic_salary!=null and item.basic_salary!=''">
				,#{item.basic_salary}
			</if>
			<if test="item.skill_parameter!=null and item.skill_parameter!=''">
				,#{item.skill_parameter}
			</if>
			<if test="item.salary_type!=null and item.salary_type!=''">
				,#{item.salary_type}
			</if>
			<if test="item.plant_org!=null and item.plant_org!=''">
				,#{item.plant_org}
			</if>
			<if test="item.workshop_org!=null and item.workshop_org!=''">
				,#{item.workshop_org}
			</if>
			<if test="item.workgroup_org!=null and item.workgroup_org!=''">
				,#{item.workgroup_org}
			</if>
			<if test="item.team_org!=null and item.team_org!=''">
				,#{item.team_org}
			</if>
			<if test="item.job!=null and item.job!=''">
				,#{item.job}
			</if>
			<if test="item.status!=null and item.status!=''">
				,#{item.status}
			</if>
			<if test="item.join_channel!=null and item.join_channel!=''">
				,#{item.join_channel}
			</if>
			<if test="item.leave_way!=null and item.leave_way!=''">
				,#{item.leave_way}
			</if>
			<if test="item.leave_date!=null and item.leave_date!=''">
				,#{item.leave_date}
			</if>
			<if test="item.leave_reason!=null and item.leave_reason!=''">
				,#{item.leave_reason}
			</if>
			<if test="item.last_company!=null and item.last_company!=''">
				,#{item.last_company}
			</if>
			<if test="item.last_leave_reason!=null and item.last_leave_reason!=''">
				,#{item.last_leave_reason}
			</if>
			<if test="item.phone!=null and item.phone!=''">
				,#{item.phone}
			</if>
			<if test="item.family_address!=null and item.family_address!=''">
				,#{item.family_address}
			</if>
			<if test="item.nation!=null and item.nation!=''">
				,#{item.nation}
			</if>
			<if test="item.corporation!=null and item.corporation!=''">
				,#{item.corporation}
			</if>
			<if test="item.workplace!=null and item.workplace!=''">
				,#{item.workplace}
			</if>
			)
		</foreach>
	</insert>

	<!--批量修改员工信息 -->
	<update id="updateStaffs" parameterType="List">
		<foreach collection="list" index="index" item="item"
			separator=";">
			UPDATE BMS_HR_STAFF
			SET editor_id = #{item.editor},edit_date = #{item.edit_date}
			,name = #{item.name}
			,sex = #{item.sex}
			,birthday = #{item.birthday}
			,age = #{item.age}
			,highest_education = #{item.highest_education}
			,fresh_student = #{item.fresh_student}
			,political_status = #{item.political_status}
			,identity_card = #{item.identity_card}
			,factory_incoming_date = #{item.factory_incoming_date}
			,staff_level = #{item.staff_level} 
			,basic_salary = #{item.basic_salary}
			,skill_parameter = #{item.skill_parameter}
			,salary_type = #{item.salary_type}
			<if test="item.plant_org!=null and item.plant_org!=''">
				,plant_org = #{item.plant_org}
			</if>
			<if test="item.plant_org==null or item.plant_org==''">
				,plant_org = null
			</if>
			<if test="item.workshop_org!=null and item.workshop_org!=''">
				,workshop_org = #{item.workshop_org}
			</if>
			<if test="item.workshop_org==null or item.workshop_org==''">
				,workshop_org = #{item.workshop_org}
			</if>
			<if test="item.workgroup_org!=null and item.workgroup_org!=''">
				,workgroup_org = #{item.workgroup_org}
			</if>
			<if test="item.workgroup_org==null or item.workgroup_org==''">
				,workgroup_org = null
			</if>
			<if test="item.team_org!=null and item.team_org!=''">
				,team_org = #{item.team_org}
			</if>
			<if test="item.team_org==null or item.team_org==''">
				,team_org = null
			</if>
			,job = #{item.job}
			,status = #{item.status}
			,join_channel = #{item.join_channel}
			,leave_way = #{item.leave_way}
			,leave_date = #{item.leave_date}
			,leave_reason = #{item.leave_reason}
			,last_company = #{item.last_company}
			,last_leave_reason = #{item.last_leave_reason}
			,phone = #{item.phone}
			,family_address = #{item.family_address}
			,nation = #{item.nation}
			,corporation = #{item.corporation}
			,workplace = #{item.workplace}
			WHERE staff_number = #{item.staff_number}
		</foreach>
	</update>
	
	<select id="getWorkgroupPriceList" parameterType="Map" resultType="Map">
		select p.id,p.factory,p.workshop,p.workgroup,p.team,p.standard_price stand_price,u.username editor,
		p.edit_date,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',o.order_qty,'台') as order_desc,p.effective_date
		from BMS_HR_WORKGROUP_PRICE p
		left join BMS_OR_ORDER o on o.id=p.order_id
		left join BMS_BASE_BUS_TYPE t on t.id=o.bus_type_id
		left join BMS_BASE_USER u on u.staff_number=p.editor_id
		where 1=1
		<if test="factory !=null and factory !=''">
			and p.factory =#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			and p.workshop =#{workshop}
		</if>
		<if test="workgroup !=null and workgroup !=''">
			and p.workgroup =#{workgroup}
		</if>
		<if test="team !=null and team !=''">
			and p.team =#{team}
		</if>
		<if test="effctiveDateStart !=null and effctiveDateStart !=''">
			and p.effective_date >=#{effctiveDateStart}
		</if>
		<if test="effctiveDateEnd !=null and effctiveDateEnd !=''">
			and p.effective_date &lt;=#{effctiveDateEnd}
		</if>
		<if test="order_no !=null and order_no !=''">
			AND p.order_id= (SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no})
		</if>
		order by p.factory,p.workshop,p.workgroup,p.team,p.order_id,p.edit_date desc
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>	
	</select>	
	<select id="getWorkgroupPriceCount" parameterType="Map" resultType="int">
		select COUNT(p.id)
		from BMS_HR_WORKGROUP_PRICE p
		left join BMS_OR_ORDER o on o.id=p.order_id
		left join BMS_BASE_BUS_TYPE t on t.id=o.bus_type_id
		left join BMS_BASE_USER u on u.id=p.editor_id
		where 1=1
		<if test="factory !=null and factory !=''">
			and p.factory =#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			and p.workshop =#{workshop}
		</if>
		<if test="workgroup !=null and workgroup !=''">
			and p.workgroup =#{workgroup}
		</if>
		<if test="team !=null and team !=''">
			and p.team =#{team}
		</if>
		<if test="effctiveDateStart !=null and effctiveDateStart !=''">
			and p.effective_date >=#{effctiveDateStart}
		</if>
		<if test="effctiveDateEnd !=null and effctiveDateEnd !=''">
			and p.effective_date &lt;=#{effctiveDateEnd}
		</if>
		<if test="order_no !=null and order_no !=''">
			AND p.order_id= (SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no})
		</if>	
	</select>	
	<select id="getOrgInfo" parameterType="Map" resultType="Map">
		SELECT o1.* FROM BMS_BASE_ORG o1
			INNER JOIN BMS_BASE_ORG o2 on o1.parent_id = o2.id and o2.name = #{workgroup}
			INNER JOIN BMS_BASE_ORG o3 on o2.parent_id = o3.id and o3.name = #{workshop}
			INNER JOIN BMS_BASE_ORG o4 on o3.parent_id = o4.id and o4.name = #{factory}
		WHERE o1.name = #{small_workgroup} AND o1.deleted = '0'
	</select>
	<select id="queryWorkgroupPrice" parameterType="Map" resultType="Map">
		SELECT h.* FROM BMS_HR_WORKGROUP_PRICE h
		WHERE h.deleted = '0'
		<if test="factory !=null and factory !=''">
			AND h.factory=#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			AND h.workshop = #{workshop}
		</if>
		<if test="workgroup !=null and workgroup !=''">
			AND h.workgroup = #{workgroup}
		</if>
		<if test="small_workgroup !=null and small_workgroup !=''">
			AND h.team=#{small_workgroup}
		</if>
		<if test="order_no !=null and order_no !=''">
			AND h.order_id= (SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no})
		</if>
		<if test="effective_date !=null and effective_date !=''">
			AND h.effective_date =#{effective_date}
		</if>
	</select>
	<insert id="addWorkgroupPrice" parameterType="List">
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		<foreach collection="list" index="index" item="item"
			separator=";">
			INSERT INTO
			BMS_HR_WORKGROUP_PRICE(order_id,standard_price,editor_id,edit_date,effective_date,factory,workshop,workgroup
			<if test="item.small_workgroup!=null">
				,team
			</if>
			)
			VALUES((SELECT id FROM BMS_OR_ORDER WHERE order_no = #{item.order_no}),#{item.standard_price},#{item.editor_id},#{item.edit_date},#{item.effective_date},#{item.factory},#{item.workshop},#{item.workgroup}
			<if test="item.small_workgroup!=null">
				,#{item.small_workgroup}
			</if>
			)
		</foreach>
	</insert>
	<!--修改班组承包单价 -->
	<update id="updateWorkgroupPrice" parameterType="List">
		<foreach collection="list" index="index" item="item" separator=";">
			UPDATE BMS_HR_WORKGROUP_PRICE
			SET standard_price = #{item.standard_price},editor_id = #{item.editor_id},edit_date =
			#{item.edit_date},effective_date=#{item.effective_date} WHERE id = #{item.id}
		</foreach>
	</update>
	
	<select id="getStaffDistribution" parameterType="Map" resultType="Map">
		SELECT d.factory,d.workshop,d.workgroup,d.team,s.staff_number,s.name staff_name,d.distribution,d.effective_date,
		d.editor,d.edit_date,concat(o.order_no,' ',o.order_name,t.bus_type_code,' ',o.order_qty,'台') order_desc 
		FROM BMS_HR_STAFF_DISTRIBUTION d
		left join BMS_OR_ORDER o on d.order_id=o.id
		left join BMS_BASE_BUS_TYPE t on t.id=o.bus_type_id
		LEFT JOIN BMS_HR_STAFF s on s.staff_number=d.staff_number
		where 1=1
		<if test="effctiveDateStart !=null and effctiveDateStart !=''">
			and d.effective_date >=#{effctiveDateStart}
		</if>
		<if test="effctiveDateEnd !=null and effctiveDateEnd !=''">
			and d.effective_date &lt;=#{effctiveDateEnd}
		</if>
		<if test="factory !=null and factory !=''">
			and d.factory =#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			and d.workshop =#{workshop}
		</if>
		<if test="workgroup !=null and workgroup !=''">
			and d.workgroup =#{workgroup}
		</if>
		<if test="team !=null and team !=''">
			and d.team =#{team}
		</if>
		<if test="order_no !=null and order_no !=''">
			and d.order_id =(SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no})
		</if>
		<if test="staff !=null and staff !=''">
			and (s.name like concat(#{staff},'%') or s.staff_number like concat(#{staff},'%'))
		</if>
		order by d.factory,d.team,d.order_id,d.edit_date desc,s.staff_number
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>	
	</select>
	<select id="getStaffDistributionCount" parameterType="Map" resultType="int">
		SELECT COUNT(d.id )
		FROM BMS_HR_STAFF_DISTRIBUTION d
		left join BMS_OR_ORDER o on d.order_id=o.id
		left join BMS_BASE_BUS_TYPE t on t.id=o.bus_type_id
		LEFT JOIN BMS_HR_STAFF s on s.staff_number=d.staff_number
		where 1=1
		<if test="effctiveDateStart !=null and effctiveDateStart !=''">
			and d.effective_date >=#{effctiveDateStart}
		</if>
		<if test="effctiveDateEnd !=null and effctiveDateEnd !=''">
			and d.effective_date &lt;=#{effctiveDateEnd}
		</if>
		<if test="factory !=null and factory !=''">
			and d.factory =#{factory}
		</if>
		<if test="workshop !=null and workshop !=''">
			and d.workshop =#{workshop}
		</if>
		<if test="workgroup !=null and workgroup !=''">
			and d.workgroup =#{workgroup}
		</if>
		<if test="team !=null and team !=''">
			and d.team =#{team}
		</if>
		<if test="order_no !=null and order_no !=''">
			and d.order_id =(SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_no})
		</if>
		<if test="staff !=null and staff !=''">
			and (s.name like concat(#{staff},'%') or s.staff_number like concat(#{staff},'%'))
		</if>
	</select>
	<select id="checkIsValidStaff" parameterType="map" resultType="int">
		select count(id) from BMS_HR_STAFF where staff_number=#{staff_number} and name=#{staff_name}
	</select>
	<select id="getWorkgroupPrice" parameterType="map" resultType="double">
		SELECT ifnull(standard_price,0) FROM BMS_HR_WORKGROUP_PRICE
		where concat(factory,'-',workshop,'-',workgroup,'-',team)=#{workgroup}
		and order_id=(SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_id}) and effective_date&lt;=#{effective_date}
		order by effective_date desc 
		limit 1
	</select>
	<delete id="deleteStaffDistribution" parameterType="Map">
		delete from BMS_HR_STAFF_DISTRIBUTION where effective_date=#{effective_date}
		and staff_number in
		<foreach collection="stafflist" item="staff" open="(" separator="," close=")">
			#{staff}
		</foreach>
		and order_id=(SELECT id FROM BMS_OR_ORDER WHERE order_no = #{order_id})
	</delete>
	<insert id="saveStaffDistribution" parameterType="list" >
		<selectKey resultType="int" keyProperty="id" order="AFTER">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into BMS_HR_STAFF_DISTRIBUTION (factory,workshop,workgroup,team,staff_number,order_id,distribution,editor,edit_date,effective_date)
		values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.factory},#{item.workshop},#{item.workgroup},#{item.team},#{item.staff_number},(SELECT id FROM BMS_OR_ORDER WHERE order_no = #{item.order_id}),#{item.distribution},#{item.editor},#{item.edit_date},#{item.effective_date})
		</foreach>
	</insert>
	
	<select id="getWorkTimePrice" parameterType="Map" resultType="Map">
		SELECT P.*,F.factory_name,K.key_name,U.display_name FROM BMS_HR_HOUR_PRICE P
		LEFT OUTER JOIN BMS_BASE_FACTORY F ON P.factory_id = F.id
		LEFT OUTER JOIN BMS_BASE_KEY K ON P.hour_type = K.value AND K.key_code='HOUR_PRICE'
		LEFT OUTER JOIN BMS_BASE_USER U ON P.editor_id = U.staff_number
		WHERE 1=1 
		<if test="factory_id !=null and factory_id !=''">
			and P.factory_id = #{factory_id}
		</if>
		<if test="effective_date !=null and effective_date !=''">
			and P.effective_date =#{effective_date}
		</if>
		<if test="start !=null">
			LIMIT #{start} ,#{length} 
		</if>
	</select>
	<select id="getWorkTimePriceCount" parameterType="Map" resultType="int">
		SELECT COUNT(P.id) FROM BMS_HR_HOUR_PRICE P
		LEFT OUTER JOIN BMS_BASE_FACTORY F ON P.factory_id = F.id
		LEFT OUTER JOIN BMS_BASE_KEY K ON P.hour_type = K.value AND K.key_code='HOUR_PRICE'
		WHERE 1=1 
		<if test="factory_id !=null and factory_id !=''">
			and P.factory_id = #{factory_id}
		</if>
		<if test="effective_date !=null and effective_date !=''">
			and P.effective_date =#{effective_date}
		</if>
	</select>
	<insert id="addWorkTimePrice" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
		INSERT INTO BMS_HR_HOUR_PRICE
		(factory_id, hour_type, effective_date, price, editor_id, edit_date)
		VALUES(#{factory_id}, #{hour_type},#{effective_date}, #{price}, #{editor_id}, #{edit_date})
		]]>
	</insert>
	<update id="editWorkTimePrice" parameterType="Map">
		UPDATE BMS_HR_HOUR_PRICE SET factory_id = #{factory_id},hour_type = #{hour_type},price = #{price},effective_date = #{effective_date},editor_id = #{editor_id} ,edit_date =  #{edit_date}
		WHERE id = #{id}
	</update>
	
</mapper>
